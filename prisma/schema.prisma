// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id               String            @id @default(uuid())
  name             String
  email            String            @unique
  password         String
  role             String
  contactNo        String
  address          String
  profileImg       String
  orders Order[]


  createdAt        DateTime          @default(now())
  updatedAt        DateTime          @updatedAt
  reviewAndRatings ReviewAndRating[]

  @@map("users")
}

model Category {
  id    String @id @default(uuid())
  title String
  books Book[]

  @@map("categories")
}

model Book {
  id               String            @id @default(uuid())
  title            String
  author           String
  price            Int
  genre            String
  publicationDate  DateTime
  createdAt        DateTime          @default(now())
  updatedAt        DateTime          @updatedAt
  reviewAndRatings ReviewAndRating[]
   orderedBooks OrderedBook[]
  categoryId String
  category   Category @relation(fields: [categoryId], references: [id])

  @@map("books")
}

model ReviewAndRating {
  id        String   @id @default(uuid())
  review    String
  rating    Int
  userId    String
  user      User     @relation(fields: [userId], references: [id])
  bookId    String
  book      Book     @relation(fields: [bookId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("review_and_ratings")
}
model Order {
  id        String   @id @default(uuid())
  userId    String
  user      User     @relation(fields: [userId], references: [id])
  orderedBooks OrderedBook[]

  @@map("orders")
}
model OrderedBook {
    id        String   @id @default(uuid())
    quantity Int
    orderId    String
    order      Order     @relation(fields: [orderId], references: [id])
    bookId String
    book      Book     @relation(fields: [bookId], references: [id])
     @@map("ordered_books")
}


